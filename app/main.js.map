{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload.component.html","./src/app/file-upload/file-upload.module.ts","./src/app/file-upload/upload.service.ts","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/products/product-detail.component.ts","./src/app/products/product-detail.component.html","./src/app/products/product-detail.guard.ts","./src/app/products/product-list.component.ts","./src/app/products/product-list.component.html","./src/app/products/product.module.ts","./src/app/products/product.service.ts","./src/app/r-form/dynamic-form-question.component.ts","./src/app/r-form/dynamic-form-question.component.html","./src/app/r-form/dynamic-form.component.ts","./src/app/r-form/dynamic-form.component.html","./src/app/r-form/question-base.ts","./src/app/r-form/question-control.service.ts","./src/app/r-form/question-dropdown.ts","./src/app/r-form/question-loc.ts","./src/app/r-form/question-textbox.ts","./src/app/r-form/question.service.ts","./src/app/r-form/r-form.component.ts","./src/app/r-form/r-form.module.ts","./src/app/shared/convert-to-spaces.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/star.component.ts","./src/app/shared/star.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',\n  template: `\n    <mat-toolbar color=\"primary\">\n    <nav class='navbar navbar-expand navbar-dark'>\n        <span class='navbar-brand'>{{pageTitle}}</span>\n        <ul class='nav nav-pills'>\n          <li><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/home']\">Home</a></li>\n          <li><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/users']\">Users</a></li>\n          <li><a class='nav-link' style=\"color:white;\" routerLinkActive='active' [routerLink]=\"['/form']\">Form</a></li>\n        </ul>\n    </nav>\n    </mat-toolbar>\n    <div class='container'>\n      <router-outlet></router-outlet>\n    </div>\n    `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle = 'IDEMIA Internship';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { ProductModule } from './products/product.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FileUploadModule } from './file-upload/file-upload.module';\nimport { RFormModule } from './r-form/r-form.module';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: WelcomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    ProductModule,\n    RFormModule,\n    FileUploadModule,\n    BrowserAnimationsModule,\n    MatToolbarModule\n  ],\n  exports:[\n    MatToolbarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit , EventEmitter,Inject} from '@angular/core';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { FileUploadService } from \"./upload.service\";\nimport { Router, NavigationStart } from '@angular/router';\nimport { HttpEventType, HttpResponse, HttpRequest,HttpHeaders,HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { catchError, last, map, tap } from 'rxjs/operators';\n\nexport function hostFactory() { return window.location.hostname; }\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css'],\n  providers: [{ provide: 'HOSTNAME', useFactory: hostFactory }]\n})\nexport class FileUploadComponent implements OnInit {\n  imageURL: string;\n  uploadForm: FormGroup;\n  selectedFiles: FileList;\n  currentFile: File;\n  progress = 0;\n  message = '';\n  sub :Subscription;\n  fileInfos: Observable<any>;\n  url:string='/form/pic';\n  pageTitle:string =\"Upload Portrait\";\n  complete = new EventEmitter<string>();\n  rootURL='';\n  constructor(@Inject('HOSTNAME') private hostname: string,private router : Router,public fb: FormBuilder,private fileUploadService: FileUploadService,private _http: HttpClient) {\n    if (hostname=='localhost')\n      this.rootURL='http://'+hostname;\n    else\n      this.rootURL='https://'+hostname;\n    //console.log(this.rootURL);\n    // Reactive Form\n    this.uploadForm = this.fb.group({\n      avatar: [null],\n      name: ['']\n    });\n    this.router.events.subscribe((event) => {\n      if(event instanceof NavigationStart) {\n          this.url=event.url;\n      }\n  });\n  }\n\nselectFile(event): void {\n  this.selectedFiles = event.target.files;\n  const file = (event.target as HTMLInputElement).files[0];\n    this.uploadForm.patchValue({\n      avatar: file\n    });\n    this.uploadForm.get('avatar').updateValueAndValidity()\n    // File Preview\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageURL = reader.result as string;\n    }\n    reader.readAsDataURL(file)\n}\nngOnInit(): void {\n  if (this.router.url === '/form/pic') {\n    this.pageTitle = \"Upload Portrait\";\n  }\n  else if (this.router.url === '/form/bio') {\n    this.pageTitle = \"Upload Biometry Info\";\n  }\n}\n\n  // Image Preview\n  showPreview(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.uploadForm.patchValue({\n      avatar: file\n    });\n    this.uploadForm.get('avatar').updateValueAndValidity()\n\n    // File Preview\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageURL = reader.result as string;\n    }\n    reader.readAsDataURL(file)\n\n  }\n\n  // Submit Form\n  /*submit() {\n    console.log(this.url);\n    if (this.url==\"/form/bio\") {\n      this.url=\"/\";\n      console.log(this.url);\n      this.pageTitle = \"Upload Biometry Info\";\n\n    }else if (this.url==\"/form/pic\") {\n      console.log(this.url);\n      this.url=\"/form/bio\";\n      this.router.navigate([this.url]);\n    }\n  }*/\n  upload(): void {\n    this.progress = 0;\n    this.currentFile = this.selectedFiles.item(0);\n    this.uploadFile(this.currentFile);\n    /*console.log(this.currentFile);\n    this.fileUploadService.upload(this.currentFile).subscribe(\n      (event: any) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.message = event.body.message;\n          console.log(event.body.message);\n          //this.fileInfos = this.fileUploadService.getFiles();\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        this.currentFile = undefined;\n      });*/\n    this.selectedFiles = undefined;\n  }\n  private uploadFile(file: File) {\n    const fd = new FormData();\n    fd.append('uploads[]', file,file.name);\n    const req = new HttpRequest('POST', this.rootURL+'/api/upload', fd, {\n          reportProgress: true,\n          responseType: 'json'\n    });\n    this.sub=this._http.request(req).pipe(\n          map(event => {\n                switch (event.type) {\n                      case HttpEventType.UploadProgress:\n                        this.progress = Math.round(event.loaded * 100 / event.total);\n                            break;\n                      case HttpEventType.Response:\n                            return event;\n                }\n          }),\n          tap(message => { }),\n          last()\n    ).subscribe(\n          (event: any) => {\n                if (typeof (event) === 'object') {\n                      //this.complete.emit(event.body);\n                      console.log(event.body);\n                      this.message = 'Uploaded Successfully!';\n                      if (this.router.url === '/form/pic')\n                        this.url='/form/bio';\n                      else if (this.router.url === '/form/bio')\n                        this.url='/';\n                      setTimeout(() =>\n                      {\n                          this.router.navigate([this.url]);\n                      },\n                      2000);\n                }\n          },\n          err => {\n            this.progress = 0;\n            this.message = 'Could not upload the file!';\n            this.currentFile = undefined;\n          }\n    );\n\n}\n}\n","\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n\n\n        <form [formGroup]=\"uploadForm\" >\n          <div *ngIf=\"currentFile\" class=\"progress\">\n            <div\n              class=\"progress-bar progress-bar-info progress-bar-striped\"\n              role=\"progressbar\"\n              attr.aria-valuenow=\"{{ progress }}\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: progress + '%' }\"\n            >\n              {{ progress }}%\n            </div>\n          </div>\n\n          <label class=\"btn btn-default\" >\n            <input style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\"\n            type=\"file\" accept=\"image/*\" (change)=\"selectFile($event)\" />\n          </label>\n\n          <button class=\"btn btn-success\" style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n            Upload\n          </button>\n         <!-- <button style=\"position: absolute;left: 90%;right: auto;\" type=\"submit\" mat-button color=\"primary\">\n            Done\n          </button>-->\n          <div class=\"alert alert-light\" role=\"alert\" style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\">{{ message }}</div>\n          <div class=\"card\">\n            <div class=\"card-header\">Preview</div>\n              <!-- Image Preview -->\n              <div  class=\"imagePreview\" >\n                <img style=\"display: block;margin-left: auto;margin-right: auto;width: 100%;\"\n                 *ngIf=\"imageURL && imageURL !== ''\" [src]=\"imageURL\" [alt]=\"uploadForm.value.name\">\n              </div>\n          </div>\n\n        </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadComponent } from './file-upload.component';\nimport { RouterModule,Router } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\n\n@NgModule({\n  declarations: [\n    FileUploadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      { path: 'form/pic', component: FileUploadComponent },\n      { path: 'form/bio', component: FileUploadComponent }\n    ]),\n  ],\n  exports:[\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule\n  ]\n})\nexport class FileUploadModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent, HttpErrorResponse,HttpHeaders } from  '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  // If using Stackblitz, replace the url with this line\n  // because Stackblitz can't find the api folder.\n  // private productUrl = 'assets/products/products.json';\n  private baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) { }\n\n  upload(file: File): Observable<HttpEvent<any>> {\n    const formData: FormData = new FormData();\n    const headerDict = {\n      'Content-Type': 'image/jpeg',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    }\n    formData.append('file', file);\n\n    const req = new HttpRequest('POST', `${this.baseUrl}/upload`, formData, {\n      reportProgress: true,\n      headers: new HttpHeaders(headerDict),\n      responseType: 'json'\n    });\n    console.log(req);\n    return this.http.request(req);\n  }\n\n  getFiles(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/files`);\n  }\n  /*postFile(fileToUpload: File): Observable<Object> {\n    const endpoint = 'http://localhost:8080/api/upload/';\n    const formData: FormData = new FormData();\n    const headerDict = {\n      'Content-Type': 'image/jpeg',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    }\n\n    formData.append('fileKey', fileToUpload, fileToUpload.name);\n    return this.http\n      .post(endpoint, formData,{\n        headers: new HttpHeaders(headerDict),\n      })\n}*/\n  private handleError(err: HttpErrorResponse): Observable<never> {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\">\n        <img src=\"./assets/images/logo.jpg\"\n             class=\"img-responsive center-block\"\n             style=\"max-height:300px;padding-bottom:50px;max-width:100%;\" />\n      </div>\n\n      <div class=\"text-center\">Developed by:</div>\n      <div class=\"text-center\">\n        <h3>Oukassou Yassine</h3>\n      </div>\n\n      <!--<div class=\"text-center\">@oksyassine</div>-->\n      <div class=\"text-center\">\n        <a href=\"https://github.com/oksyassine/YARLOMIA\">Source Code</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  pageTitle = 'Product Detail';\n  errorMessage = '';\n  product: IProduct | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private productService: ProductService) {\n  }\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getProduct(id);\n    }\n  }\n\n  getProduct(id: number): void {\n    this.productService.getProduct(id).subscribe({\n      next: product => this.product = product,\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/products']);\n  }\n}\n","<div class='card'\n     *ngIf='product'>\n  <div class='card-header'>\n    {{pageTitle + ': ' + product.productName}}\n  </div>\n\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-8'>\n        <div class='row'>\n          <div class='col-md-4'>Name:</div>\n          <div class='col-md-8'>{{product.productName}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Code:</div>\n          <div class='col-md-8'>{{product.productCode | lowercase | convertToSpaces: '-'}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Description:</div>\n          <div class='col-md-8'>{{product.description}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Availability:</div>\n          <div class='col-md-8'>{{product.releaseDate}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>Price:</div>\n          <div class='col-md-8'>{{product.price|currency:'USD':'symbol'}}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>5 Star Rating:</div>\n          <div class='col-md-8'>\n            <pm-star [rating]='product.starRating'>\n            </pm-star>\n          </div>\n        </div>\n      </div>\n\n      <div class='col-md-4'>\n        <img class='center-block img-responsive'\n             [style.width.px]='200'\n             [style.margin.px]='2'\n             [src]='product.imageUrl'\n             [title]='product.productName'>\n      </div>\n    </div>\n  </div>\n\n  <div class='card-footer'>\n    <button class='btn btn-outline-secondary'\n            (click)='onBack()'\n            style='width:80px'>\n      <i class='fa fa-chevron-left'></i> Back\n    </button>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const id = +next.url[1].path;\n    // const id2 = next.paramMap.get('id');\n    // console.log(id2);\n    if (isNaN(id) || id < 1) {\n      alert('Invalid product Id');\n      this.router.navigate(['/products']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  pageTitle = 'Product List';\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = false;\n  errorMessage = '';\n\n  _listFilter = '';\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;\n  }\n\n  filteredProducts: IProduct[] = [];\n  products: IProduct[] = [];\n\n  constructor(private productService: ProductService) { }\n\n  onRatingClicked(message: string): void {\n    this.pageTitle = 'Product List: ' + message;\n  }\n\n  performFilter(filterBy: string): IProduct[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.products.filter((product: IProduct) =>\n      product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n  toggleImage(): void {\n    this.showImage = !this.showImage;\n  }\n\n  ngOnInit(): void {\n    this.productService.getProducts().subscribe({\n      next: products => {\n        this.products = products;\n        this.filteredProducts = this.products;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}\n","<div class='card'>\n  <div class='card-header'>\n    {{pageTitle}}\n  </div>\n  <div class='card-body'>\n    <div class='row'>\n      <div class='col-md-2'>Filter by:</div>\n      <div class='col-md-4'>\n        <input type='text'\n               [(ngModel)]='listFilter' />\n      </div>\n    </div>\n    <div class='row'\n         *ngIf='listFilter'>\n      <div class='col-md-6'>\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n    <div class='table-responsive'>\n      <table class='table'\n             *ngIf='products && products.length'>\n        <thead>\n          <tr>\n            <th>\n              <button class='btn btn-primary'\n                      (click)='toggleImage()'>\n                {{showImage ? 'Hide' : 'Show'}} Image\n              </button>\n            </th>\n            <th>Product</th>\n            <th>Code</th>\n            <th>Available</th>\n            <th>Price</th>\n            <th>5 Star Rating</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor='let product of filteredProducts'>\n            <td>\n              <img *ngIf='showImage'\n                   [src]='product.imageUrl'\n                   [title]='product.productName'\n                   [style.width.px]='imageWidth'\n                   [style.margin.px]='imageMargin'>\n            </td>\n            <td>\n              <a [routerLink]=\"['/products', product.productId]\">\n                {{ product.productName }}\n              </a>\n            </td>\n            <td>{{ product.productCode | lowercase | convertToSpaces:'-' }}</td>\n            <td>{{ product.releaseDate }}</td>\n            <td>{{ product.price | currency:'USD':'symbol':'1.2-2' }}</td>\n            <td>\n              <pm-star [rating]='product.starRating'\n                       (ratingClicked)='onRatingClicked($event)'>\n              </pm-star>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<div *ngIf='errorMessage'\n     class='alert alert-danger'>\n  Error: {{ errorMessage }}\n</div>","import { NgModule } from '@angular/core';\nimport { ProductListComponent } from './product-list.component';\nimport { ProductDetailComponent } from './product-detail.component';\nimport { ConvertToSpacesPipe } from '../shared/convert-to-spaces.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailGuard } from './product-detail.guard';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    ConvertToSpacesPipe,\n  ],\n  imports: [\n    RouterModule.forChild([\n      { path: 'users', component: ProductListComponent },\n      {\n        path: 'users/:id',\n        canActivate: [ProductDetailGuard],\n        component: ProductDetailComponent\n      }\n    ]),\n    SharedModule\n  ]\n})\nexport class ProductModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { IProduct } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  // If using Stackblitz, replace the url with this line\n  // because Stackblitz can't find the api folder.\n  // private productUrl = 'assets/products/products.json';\n  private productUrl = 'api/products/products.json';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>(this.productUrl)\n      .pipe(\n        tap(data => console.log('All: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getProduct(id: number): Observable<IProduct | undefined> {\n    return this.getProducts()\n      .pipe(\n        map((products: IProduct[]) => products.find(p => p.productId === id))\n      );\n  }\n\n  private handleError(err: HttpErrorResponse): Observable<never> {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  styleUrls: ['./input-form.css'],\r\n  templateUrl: './dynamic-form-question.component.html'\r\n})\r\nexport class DynamicFormQuestionComponent {\r\n  @Input() question: QuestionBase<string>;\r\n  @Input() form: FormGroup;\r\n  get isValid() { return this.form.controls[this.question.key].valid; }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","\r\n      <div [formGroup]=\"form\">\r\n\r\n\r\n        <div [ngSwitch]=\"question.controlType\" >\r\n          <mat-form-field  class=\"example-full-width\">\r\n          <mat-label [attr.for]=\"question.key\">{{question.label}}</mat-label>\r\n          <input  matInput *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\r\n                  [id]=\"question.key\" [type]=\"question.type\">\r\n\r\n          <textarea matInput [id]=\"question.key\" *ngSwitchCase=\"'area'\" [formControlName]=\"question.key\">\r\n          </textarea>\r\n          <mat-select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\">\r\n            <mat-option *ngFor=\"let opt of question.options\" [value]=\"opt.key\">{{opt.value}}</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"!isValid\">\r\n            {{question.label}} is required\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!--<div class=\"errorMessage\" *ngIf=\"!isValid\">{{question.label}} is required</div>-->\r\n      </div>\r\n\r\n\r\n      <!--\r\n      Copyright Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license\r\n      -->\r\n\r\n\r\n","import { Component, Input, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { QuestionBase } from './question-base';\r\nimport { QuestionControlService } from './question-control.service';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\n\r\nexport function hostFactory() { return window.location.hostname; }\r\n\r\n\r\n@Component({\r\n  selector: 'app-dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  providers: [QuestionControlService,Location, {provide: LocationStrategy, useClass: PathLocationStrategy}\r\n  ,{ provide: 'HOSTNAME', useFactory: hostFactory }]\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n\r\n  @Input() questions: QuestionBase<string>[] = [];\r\n  form: FormGroup;\r\n  payLoad = '';\r\n  rootURL = '';\r\n  destroy$: Subject<boolean> = new Subject<boolean>();\r\n  location: Location;\r\n\r\n  constructor(@Inject('HOSTNAME') private hostname: string,private qcs: QuestionControlService,private router : Router,private http: HttpClient,location: Location) {\r\n    //this.location = location;\r\n    if (hostname=='localhost')\r\n      this.rootURL='http://'+hostname;\r\n    else\r\n      this.rootURL='https://'+hostname;\r\n    console.log(this.rootURL);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.qcs.toFormGroup(this.questions);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.payLoad = JSON.stringify(this.form.getRawValue());\r\n    this.http.post(this.rootURL + '/api/form', this.form.getRawValue()).pipe(takeUntil(this.destroy$)).subscribe(data => {\r\n      console.log('message::::', data);\r\n    });\r\n\r\n    setTimeout(() =>\r\n    {\r\n      this.router.navigate(['/form/pic']);\r\n        },\r\n    2000);\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","﻿<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    Personal Infos\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"container-fluid\">\r\n<div>\r\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\r\n\r\n    <div *ngFor=\"let question of questions\" class=\"form-row\">\r\n      <app-question style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\"\r\n      [question]=\"question\" [form]=\"form\"></app-question>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n      <button style=\"display: block;margin-left: auto;margin-right: auto;width: 10%;\"\r\n       mat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Save</button>\r\n    </div>\r\n  </form>\r\n\r\n  <div style=\"display: block;margin-left: auto;margin-right: auto;width: 50%;\"\r\n   *ngIf=\"payLoad\" class=\"form-row\">\r\n    <strong>Saved the following values</strong><br>{{payLoad}}\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<!--\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n-->\r\n","export class QuestionBase<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  required: boolean;\r\n  order: number;\r\n  controlType: string;\r\n  type: string;\r\n  options: {key: string, value: string}[];\r\n\r\n  constructor(options: {\r\n      value?: T;\r\n      key?: string;\r\n      label?: string;\r\n      required?: boolean;\r\n      order?: number;\r\n      controlType?: string;\r\n      type?: string;\r\n      options?: {key: string, value: string}[];\r\n    } = {}) {\r\n    this.value = options.value;\r\n    this.key = options.key || '';\r\n    this.label = options.label || '';\r\n    this.required = !!options.required;\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.controlType = options.controlType || '';\r\n    this.type = options.type || '';\r\n    this.options = options.options || [];\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  toFormGroup(questions: QuestionBase<string>[] ) {\r\n    const group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\r\n                                              : new FormControl(question.value || '');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { QuestionBase } from './question-base';\r\n\r\nexport class DropdownQuestion extends QuestionBase<string> {\r\n  controlType = 'dropdown';\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { QuestionBase } from './question-base';\r\n\r\nexport class AreaQuestion extends QuestionBase<string> {\r\n  controlType = 'area';\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { QuestionBase } from './question-base';\r\n\r\nexport class TextboxQuestion extends QuestionBase<string> {\r\n  controlType = 'textbox';\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","import { Injectable } from '@angular/core';\r\n\r\nimport { AreaQuestion } from './question-loc';\r\nimport { QuestionBase } from './question-base';\r\nimport { TextboxQuestion } from './question-textbox';\r\nimport { DropdownQuestion } from './question-dropdown';\r\n\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n  // TODO: get from a remote source of question metadata\r\n  getQuestions() {\r\n\r\n    const questions: QuestionBase<string>[] = [\r\n\r\n      new DropdownQuestion({\r\n        key: 'sexe',\r\n        label: 'Gender',\r\n        required: true,\r\n        options: [\r\n          {key: 'M',  value: 'Man'},\r\n          {key: 'F',  value: 'Woman'}\r\n        ],\r\n        order: 5\r\n      }),\r\n      new AreaQuestion({\r\n        key: 'address',\r\n        label: 'Address',\r\n        required: true,\r\n        order: 4\r\n      }),\r\n      new TextboxQuestion({\r\n        key: 'cin',\r\n        label: 'CIN',\r\n        required: true,\r\n        order: 3\r\n      }),\r\n      new TextboxQuestion({\r\n        key: 'firstName',\r\n        label: 'First name',\r\n        required: true,\r\n        order: 1\r\n      }),\r\n\r\n      new TextboxQuestion({\r\n        key: 'lastName',\r\n        label: 'Last Name',\r\n        type: 'text',\r\n        required: true,\r\n        order: 2\r\n      })\r\n    ];\r\n\r\n    return of(questions.sort((a, b) => a.order - b.order));\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { Component } from '@angular/core';\r\n\r\nimport { QuestionService } from './question.service';\r\nimport { QuestionBase } from './question-base';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <div>\r\n      <app-dynamic-form [questions]=\"questions$ | async\"></app-dynamic-form>\r\n    </div>\r\n  `,\r\n  providers:  [QuestionService]\r\n})\r\nexport class RFormComponent {\r\n  questions$: Observable<QuestionBase<any>[]>;\r\n\r\n  constructor(service: QuestionService) {\r\n    this.questions$ = service.getQuestions();\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { RFormComponent } from './r-form.component';\r\nimport { DynamicFormComponent } from './dynamic-form.component';\r\nimport { DynamicFormQuestionComponent } from './dynamic-form-question.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n@NgModule({\r\n  imports: [ BrowserModule, ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    RouterModule.forChild([\r\n      { path: 'form', component: RFormComponent },\r\n    ]), ],\r\n  declarations: [ RFormComponent, DynamicFormComponent, DynamicFormQuestionComponent ],\r\n  bootstrap: [ RFormComponent ],\r\n  exports:[\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class RFormModule {\r\n  constructor() {\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'convertToSpaces'\n})\nexport class ConvertToSpacesPipe implements PipeTransform {\n\n  transform(value: string, character: string): string {\n    return value.replace(character, ' ');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StarComponent } from './star.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    StarComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StarComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnChanges, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'pm-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnChanges {\n  @Input() rating = 0;\n  starWidth = 0;\n  @Output() ratingClicked: EventEmitter<string> =\n    new EventEmitter<string>();\n\n  ngOnChanges(): void {\n    this.starWidth = this.rating * 75 / 5;\n  }\n\n  onClick(): void {\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\n  }\n}\n","<div class=\"crop\"\n     [style.width.px]=\"starWidth\"\n     [title]=\"rating\"\n     (click)=\"onClick()\">\n  <div style=\"width: 75px\">\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n    <span class=\"fa fa-star\"></span>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}